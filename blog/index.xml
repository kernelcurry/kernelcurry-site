<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>KernelCurry's Thoughts on KernelCurry</title><link>https://kernelcurry.com/blog/</link><description>Recent content in KernelCurry's Thoughts on KernelCurry</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 02 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://kernelcurry.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Top Games of the Decade (2010 - 2019)</title><link>https://kernelcurry.com/blog/top-games-of-the-twenty-tens/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/top-games-of-the-twenty-tens/</guid><description>&lt;p>Lists of &lt;code>Top X&lt;/code> or &lt;code>Best Y&lt;/code> can very widely from person to person, but being the winner of the 1994 Nintendo Championship (PowerFest 94) in the 18+ category should give some klout right?! Below, Mike Iarossi outlines his top games from the past decade.&lt;/p>
&lt;figure>&lt;img src="https://kernelcurry.com/blog/top-games-of-the-twenty-tens/mike-iarossi.jpg">&lt;figcaption>
 &lt;h4>Mike Iarossi - Nintento PowerFest &amp;#39;94 Champion&lt;/h4>
 &lt;/figcaption>
&lt;/figure>

&lt;h4 id="1-dark-souls-2011-2000-hours">1. Dark Souls (2011) 2000+ hours&lt;/h4>
&lt;p>In 2009 From Software released Demon&amp;rsquo;s Souls, the first in the Souls series of games. However in 2011, Dark Souls came out and has since made a huge impact on the gaming world. Countless games have tried to replicate the success, but few have come close to the masterpiece. It&amp;rsquo;s one of, if not the best, games of all time.&lt;/p></description></item><item><title>Game Review: WildSnake - SNES</title><link>https://kernelcurry.com/blog/snes-wildsnake/</link><pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/snes-wildsnake/</guid><description>&lt;figure>&lt;img src="https://kernelcurry.com/blog/snes-wildsnake/cart-front.png">&lt;figcaption>
 &lt;h4>Wildsnake Cartridge&lt;/h4>
 &lt;/figcaption>
&lt;/figure>

&lt;p>If you thought Tetris was fun, get ready for Tetris with snakes! Yeah, actual Snakes; Wild Snakes. Alexey Pajitnov, the creator of Tetris, thought it would be a good idea to add snakes to the classic game. To be honest, when I started playing this game I thought it was just a crappy rip off of Tetris, but NOPE the creator of Tetris himself thought this was a good idea&amp;hellip; sigh.&lt;/p></description></item><item><title>Game Review: SimCity - SNES</title><link>https://kernelcurry.com/blog/snes-simcity/</link><pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/snes-simcity/</guid><description>&lt;figure>&lt;img src="https://kernelcurry.com/blog/snes-simcity/cart-front.png">&lt;figcaption>
 &lt;h4>SimCity Cartridge&lt;/h4>
 &lt;/figcaption>
&lt;/figure>

&lt;p>How does a city work? Why does building a Police Station not reduce crime some times? Will you get elected as Mayor of your own town next year? Find out in this addicting game as you build for hours.&lt;/p>
&lt;h2 id="first-impressions">First Impressions&lt;/h2>
&lt;p>The push of a power switch and the sweet sweet sound of 16-bit music fills the air. As the music plays, I am starting to get excited about what is about to come&amp;hellip; Wait What?! The intro theme is only 8 measures long? Eight measures of 3/4? I know music takes up a bunch of space, but these eight measures were one of the most annoying loops I have ever heard! Smashing the start button to save my ears, the journey was about to begin.&lt;/p></description></item><item><title>Nintendo PowerFest (1994) Reunion Tournament</title><link>https://kernelcurry.com/blog/nintendo-powerfest-1994-reunion-tournament/</link><pubDate>Sat, 12 Sep 2015 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/nintendo-powerfest-1994-reunion-tournament/</guid><description>&lt;p>A few weekends ago, I flew into Arizona to attend the &lt;a href="https://gameonexpoaz.com/?utm_source=kernelcurry.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=nintendo-powerfest-1994-reunion-tournament" title="Game On Retro Expo]">Game On Retro Expo&lt;/a> with some old friends. Among this group was Dorion Whitlock (1994 Nintendo PowerFest finalist and old roommate) and Mike Iarossi (1994 Nintendo PowerFest first place winner). To say the least, I forgot how much fun it is playing video games with your friends.&lt;/p>
&lt;p>The main draw for the Game On Retro Expo was the 1994 PowerFest Reunion Tournament. Everyone at the expo was able to play a reproduction of the 1994 champion cartridge in hopes of qualifying for the Reunion tournament on Sunday. This cartridge was time capped at about six minutes and consisted of the lost level in Mario, five laps in Mario Kart, and Ken Griffey Jr. Home Run Derby. The top ten scoring players of the weekend qualified and the winner of the tournament played Mike Iarossi, the 1994 champion, on the real 1994 cartridge.&lt;/p></description></item><item><title>Running Laravel's Lumen On Google App Engine</title><link>https://kernelcurry.com/blog/running-lumen-on-google-app-engine/</link><pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/running-lumen-on-google-app-engine/</guid><description>&lt;p>When looking for a more stable hosting solution for my &lt;a href="https://mtgapi.com?utm_source=kernelcurry.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=running-lumen-on-google-app-engine">Magic: The Gathering Api&lt;/a>, I stumbled across Google&amp;rsquo;s App Engine. If you have not read up on this solution, I would recommend it.&lt;/p>
&lt;p>To get Laravel&amp;rsquo;s Lumen running correctly on Google App Engine, there are a few questions that we need to answer. Lets take these one at a time.&lt;/p>
&lt;h2 id="how-does-the-application-know-it-is-running-on-google-app-engine">How does the application know it is running on Google App Engine?&lt;/h2>
&lt;p>One of the easiest ways to figure out if the application is running on Google App Engine is to check if the &lt;code>.env&lt;/code> file is present. This is because the deployment &amp;ldquo;ignore&amp;rdquo; RegEx includes any files that start with a &lt;code>.&lt;/code> (AKA Unix hidden files). This function will come in handy when answering the next questions.&lt;/p></description></item><item><title>From WordPress To Jekyll</title><link>https://kernelcurry.com/blog/wordpress-to-jekyll/</link><pubDate>Mon, 08 Sep 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/wordpress-to-jekyll/</guid><description>&lt;h2 id="pros-and-cons">Pros and Cons&lt;/h2>
&lt;p>There are lots of pros and cons when it comes to WordPress vs Jekyll. After looking through this list you might decide that Jekyll is not for you, and that is fine. Just remember that every tool is used for different tasks and neither WordPress nor Jekyll can be declared &amp;ldquo;better&amp;rdquo; as they are both good in different situations.&lt;/p>
&lt;h4 id="jekyll-pros">Jekyll Pros&lt;/h4>
&lt;ul>
&lt;li>Speed : No PHP is called or needs to be executed. A static HTML page is served and that removes a lot of overhead on the server.&lt;/li>
&lt;li>Free Hosting : Jekyll sites can be hosted on GitHub for free. (This site is hosted on GitHub)&lt;/li>
&lt;li>Markdown Pages / Posts : All pages and posts can be written in Markdown.&lt;/li>
&lt;/ul>
&lt;h4 id="jekyll-cons">Jekyll Cons&lt;/h4>
&lt;ul>
&lt;li>No back-end or WYSIWYG : Everything is created / edited in a text editor.&lt;/li>
&lt;li>No user management : Unless you count GitHub user management.&lt;/li>
&lt;li>Not as many plugins : Many do exist, but they are not in a central repository like WordPress.&lt;/li>
&lt;/ul>
&lt;p>I am sure there are hundreds of other pros and cons that could be listed, but I am trying to keep it simple. If there is something huge I missed, please send me a tweet and I will get it added.&lt;/p></description></item><item><title>Asynchronous Functions In Hack</title><link>https://kernelcurry.com/blog/asynchronous-hack/</link><pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/asynchronous-hack/</guid><description>&lt;p>The ability for PHP programs to execute asynchronous functions… Yeah, I said it and now it exists. By coding in Facebook’s new Hack Language, using your CPU’s cycles correctly has never been so easy. Let’s delve into this new language head first!&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">* This function calls async functions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">void&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[main] Calling Async Function&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $asyncCall &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">getInfo&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[main] Triangulating Atlantis&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[main] Calculating the Meaning Of Life&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[main] Triangulating Atlantis&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[main] Time To Request Async Return Information&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $output &lt;span style="color:#f92672">=&lt;/span> $asyncCall&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">join&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Output Vector Data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($output &lt;span style="color:#66d9ef">as&lt;/span> $key &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#39;[&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$key&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#39;] =&amp;gt; &amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$value&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;p>As can be see, this function is no different than any normal PHP function. The only thing you have to notice is the function &lt;code>join()&lt;/code> called on line 14. This function calls the data from the asynchronous function initialized on line 7.&lt;/p></description></item><item><title>Facebook’s Hack Developer Day 2014</title><link>https://kernelcurry.com/blog/facebooks-hack-developer-day-2014/</link><pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/facebooks-hack-developer-day-2014/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>This last week I was lucky enough to step onto Facebook&amp;rsquo;s campus for their first ever Hack Developer Day. Throughout the day developers and project managers gave talks about HHVM and Hack. From overviews to the nitty gritty details, each talk brought more insight into why this language was created. Below are a few of the talks that I thought were the best of the bunch.&lt;/p>
&lt;h2 id="hack-language-and-library-features">Hack Language and Library Features&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
 &lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LIjkcfaiA60?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="A Tour of New Language and Library Features - Hack Dev Day">&lt;/iframe>
 &lt;/div>

&lt;p>This talk walks through most of the new features of the Hack language. With just this overview of the language, most PHP developers could start using Hack in just a few minutes. Although HHVM has lots of &lt;a href="http://docs.hhvm.com/">documentation&lt;/a>, this talk solidifies the features with relevant examples for the development community.&lt;/p></description></item><item><title>How To Make An Object Oriented WordPress Plugin</title><link>https://kernelcurry.com/blog/object-oriented-wordpress-plugin/</link><pubDate>Wed, 05 Feb 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/object-oriented-wordpress-plugin/</guid><description>&lt;p>You just learned how to create a simple WordPress plugin, and now you hear people talking about how WordPress is becoming more object-oriented. What does that mean? Lets take a step back and start with the basics.&lt;/p>
&lt;p>Most simple WordPress plugins are written using procedural programming. This means that your code excited from top to bottom; calling functions and setting variables along the way. A prime example of this is the default WordPress plugin: &lt;a href="https://github.com/WordPress/WordPress/blob/7ee6ad566d5b28bcbb105432f1dbf06751c1aeda/wp-content/plugins/hello.php">Hello Dolly&lt;/a>. Lets take this simple plugin and restructure it to be object-oriented.&lt;/p></description></item><item><title>2 Dimensional Array To CSV Download Using PHP</title><link>https://kernelcurry.com/blog/array-to-csv-download/</link><pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/array-to-csv-download/</guid><description>&lt;p>Have you ever needed to convert a 2 dimensional array into a CSV then force a download? Well, I have, and here is how I did it:&lt;/p>
&lt;h3 id="array">Array&lt;/h3>
&lt;p>Every internal array must have the same keys. These keys may be set to null, but the key must exist. Below is a sample array that we can work with through this example.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;title&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;How to be Good at Life&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;author&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;@GRTaylor2&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;url&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;https://medium.com/better-humans/56302026d56e&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;title&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Clean URLs for Good SEO&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;author&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;@ChuckReynolds&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;url&amp;#39;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#39;http://rynoweb.com/clean-urls-good-seo/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="code">Code&lt;/h3>
&lt;p>The code (below) takes the array (above) and converts it into a CSV string with the keys being the header row. After the string is generated, it is placed into output buffer then forced to be downloaded by the browser.&lt;/p></description></item><item><title>Every Company Should Have a #HackNight</title><link>https://kernelcurry.com/blog/company-hack-night/</link><pubDate>Fri, 24 Jan 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/company-hack-night/</guid><description>&lt;p>For the past year, every Wednesday night at about 6:00 p.m. work stops! Since I have been working for &lt;a href="https://leve.rs/?utm_source=kernelcurry.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog">Levers&lt;/a> there has been a weekly hack night. To put it simply: &amp;ldquo;Stop your real work and work on something fun!&amp;rdquo;&amp;quot;&lt;/p>
&lt;p>There have been some winning hack night projects and some losing ones. Let&amp;rsquo;s take a look:&lt;/p>
&lt;h3 id="magic-the-gathering-api--winning">Magic: The Gathering API : (winning)&lt;/h3>
&lt;ul>
&lt;li>Author: Michael Curry&lt;/li>
&lt;li>Link: &lt;a href="https://mtgapi.com/?utm_source=kernelcurry.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog">https://mtgapi.com&lt;/a>&lt;/li>
&lt;li>Description: There was no card API for Magic the Gathering?! I could not stand for that. Over the prod of 3 weeks – only working on hack nights – this service was created and tested, and MTG API was born. This service is available for free to everyone that wants to use it. This was defiantly a hack night project that took on a life of its own.&lt;/li>
&lt;/ul>
&lt;h3 id="travel-blog--winning">Travel Blog : (winning)&lt;/h3>
&lt;ul>
&lt;li>Author: Emily Timm&lt;/li>
&lt;li>Link: &lt;a href="http://aboutgoingoverboard.com/?utm_source=kernelcurry.com&amp;amp;utm_medium=referral&amp;amp;utm_campaign=blog">AboutGoingOverboard.com&lt;/a>&lt;/li>
&lt;li>Description: Emily took it upon herself to make her own travel blog. She wanted to learn how code came together to make a website and how to merge WordPress into a custom format. After a few hack nights, Emily had her new blog up and running! It is full of amazing posts about places anyone would be lucky to visit.&lt;/li>
&lt;/ul>
&lt;h3 id="mirror-your-site--losing">Mirror Your Site : (Losing)&lt;/h3>
&lt;ul>
&lt;li>Author: Michael Curry&lt;/li>
&lt;li>Description: I created a javascript file that would mirror a web page. This worked very well in theory, but not in practice. CSS transitions messed up everything. If it would have worked, it would have been a fun thing to put on a site to mess with your friends, or as a Konami Code.&lt;/li>
&lt;/ul>
&lt;h3 id="twimlbin--winning">Twimlbin : (winning)&lt;/h3>
&lt;ul>
&lt;li>Author: Jonathan Kressaty&lt;/li>
&lt;li>Link: &lt;a href="http://twimlbin.com">http://twimlbin.com&lt;/a>&lt;/li>
&lt;li>Description: Do you use Twilio? Do you use TwiML? Twimlbin allows you to host TwiML at a static URL without any need for hosting or a web server. This service just recently hit 1 Million requests.
This past year, there have been many ideas between our employees for hack night. Some have been notable and other not so much, but no one can deny the fact that every project brings new knowledge. Hack nights are a great break from the mundane and gives time for motivation to those who need it.&lt;/li>
&lt;/ul>
&lt;p>Take a break this Wednesday and build something!&lt;/p></description></item><item><title>Why You Should Use C With Php</title><link>https://kernelcurry.com/blog/why-you-should-use-c-with-php/</link><pubDate>Tue, 07 Jan 2014 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/why-you-should-use-c-with-php/</guid><description>&lt;p>A few months ago, I calculated the top Magic: The Gathering cards in the games modern format [LINK_BROKEN]. This was accomplished using pure PHP. In total it took about 30 minutes to calculate. With a 30 minute runtime, I wanted to find a faster way to crunch the numbers. What better way than to use C.&lt;/p>
&lt;p>As I did not want to spend the time rewriting code if it did not make a difference, I thought I would use a simple application for this experiment: Calculating the nth term of the fibonacci sequence.&lt;/p></description></item><item><title>Benchmark Analysis Of PHP Array Loops</title><link>https://kernelcurry.com/blog/benchmark-analysis-of-php-array-loops/</link><pubDate>Thu, 05 Dec 2013 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/benchmark-analysis-of-php-array-loops/</guid><description>&lt;p>&lt;em>UPDATE:&lt;/em> Migrated from a &lt;a href="https://web.archive.org/web/20140730180731/http://leve.rs:80/blog/benchmark-analysis-of-php-array-loops">post&lt;/a> I wrote when working on leve.rs&lt;/p>
&lt;hr>
&lt;p>The last post I wrote provided examples of different ways to use array manipulation in PHP &lt;a href="https://kernelcurry.com/blog/correct-array-manipulation-in-php/">Link&lt;/a>. An amazing number of people replied with a compelling argument, saying it’s better to use a foreach statement instead of the array_walk function.&lt;/p>
&lt;p>As all comments I receive from my articles, I thought hard on the idea. What is the fastest way achieve the end result?&lt;/p></description></item><item><title>Array Manipulation in PHP, The Correct Way</title><link>https://kernelcurry.com/blog/correct-array-manipulation-in-php/</link><pubDate>Thu, 31 Oct 2013 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/correct-array-manipulation-in-php/</guid><description>&lt;p>&lt;em>UPDATE:&lt;/em> Migrated from a &lt;a href="https://web.archive.org/web/20140718092350/http://leve.rs:80/blog/correct-array-manipulation-in-php/">post&lt;/a> I wrote when working on leve.rs&lt;/p>
&lt;hr>
&lt;p>More often than not, when PHP developers debug others’ code, the majority of each method is taken up by array manipulations. Spending this much time on array manipulations is a huge hassle when trying to understand any given method.&lt;/p>
&lt;p>In order to speed up the debugging process, it’s important to start writing array manipulations the correct way, first. Here are a few examples of code I have either written myself or had to fix in the past. It is time every PHP developer knows how to manipulate arrays properly!&lt;/p></description></item><item><title>Introduction</title><link>https://kernelcurry.com/blog/introduction/</link><pubDate>Wed, 30 Oct 2013 00:00:00 +0000</pubDate><guid>https://kernelcurry.com/blog/introduction/</guid><description>&lt;p>&amp;ldquo;The plumber always has plumbing problems at home.&amp;rdquo; &amp;hellip; &amp;ldquo;Carpenters buy their furniture at IKEA.&amp;rdquo; &amp;hellip; &amp;ldquo;The developers never has a good website&amp;rdquo;&amp;hellip;&lt;/p>
&lt;p>For years I did not only &amp;ldquo;not have a good website&amp;rdquo;, but I didn&amp;rsquo;t have a website at all. finally, I decided to make something. It may not be the prettiest thing in the world, but hey&amp;hellip; at least it is a website.&lt;/p>
&lt;p>This site will be used as a gateway to all of my projects and discoveries over the years. I hope that these posts will educate and inspire.&lt;/p></description></item></channel></rss>