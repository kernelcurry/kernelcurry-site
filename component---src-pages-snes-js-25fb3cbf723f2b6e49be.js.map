{"version":3,"sources":["webpack:///./src/components/post-preview.js","webpack:///./src/components/post-list.js","webpack:///./src/pages/snes.js"],"names":["PostPreview","type","node","styled","div","itemScope","itemType","className","to","fields","slug","itemProp","frontmatter","title","description","PostList","posts","ListContainer","ul","map","key","id","SnesIndex","render","this","props","data","allMarkdownRemark","edges","text","Component","pageQuery"],"mappings":"4IA2DeA,EAtDK,YAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAClBF,EAAcG,IAAOC,IAAV,+EAAGD,CAAH,6PAwBjB,OACI,kBAACH,EAAD,CAAaK,WAAS,EAACC,SAAS,kCAC5B,wBAAIC,UAAU,SACV,kBAAC,OAAD,CAAMC,GAAI,IAAMP,EAAOC,EAAKO,OAAOC,KAAMC,SAAS,YAC7CT,EAAKU,YAAYC,QAG1B,6BACA,uBAAGF,SAAS,SAAST,EAAKU,YAAYE,eCJnCC,IA5BE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOf,EAAU,EAAVA,KAChBgB,EAAgBd,IAAOe,GAAV,8EAAGf,CAAH,wGAanB,OACI,kBAACc,EAAD,KACKD,EAAMG,KAAI,YAAa,IAAXjB,EAAU,EAAVA,KACT,OAAO,kBAAC,EAAD,CAAakB,IAAKlB,EAAKmB,GAAInB,KAAMA,EAAMD,KAAMA,U,oJChB9DqB,E,gLACFC,OAAA,WAAU,IAEAP,EADSQ,KAAKC,MAAbC,KACYC,kBAAkBC,MAMrC,OACI,kBAAC,IAAD,CAAQf,MAAM,kBACV,kBAAC,IAAD,CAAMA,MANI,iBAMcgB,KAJ5B,mRAKI,kBAAC,IAAD,CAAUb,MAAOA,EAAOf,KAAK,W,GAZrB6B,aAkBTR,YAER,IAAMS,EAAS","file":"component---src-pages-snes-js-25fb3cbf723f2b6e49be.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst PostPreview = ({type, node}) => {\n    const PostPreview = styled.div`\n      h2 {\n        font-size: 22px;\n        font-weight: normal;\n        margin: 0;\n        line-height: 28px;\n      }\n      a {\n        color: #1eabf2;\n        text-decoration: none;\n      }\n      hr {\n        margin-top: -1px;\n        margin-bottom: 16px;\n        border: none;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n      }\n      p {\n        margin-bottom: 16px;\n        font-size: 16px;\n        line-height: 24px;\n      }\n    `;\n\n    return (\n        <PostPreview itemScope itemType=\"http://schema.org/CreativeWork\">\n            <h2 className=\"title\">\n                <Link to={'/' + type + node.fields.slug} itemProp=\"headline\">\n                    {node.frontmatter.title}\n                </Link>\n            </h2>\n            <hr/>\n            <p itemProp=\"about\">{node.frontmatter.description}</p>\n        </PostPreview>\n    );\n};\n\nPostPreview.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired\n        }),\n        fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired\n        }),\n        excerpt: PropTypes.string.isRequired\n    }),\n    type: PropTypes.string.isRequired\n};\n\nexport default PostPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport PostPreview from \"./post-preview\";\n\nconst PostList = ({posts, type}) => {\n    const ListContainer = styled.ul`\n      list-style: none;\n      margin: auto;\n      margin-top: 48px;\n      margin-bottom: 128px;\n      max-width: 680px;\n      text-align: center;\n    `;\n\n    /**\n     * Render\n     */\n\n    return (\n        <ListContainer>\n            {posts.map(({node}) => {\n                return <PostPreview key={node.id} node={node} type={type}/>;\n            })}\n        </ListContainer>\n    );\n};\n\nPostList.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    type: PropTypes.string.isRequired\n};\n\nexport default PostList;\n","import React, {Component} from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Hero from \"../components/hero\";\nimport PostList from \"../components/post-list\";\n\nclass SnesIndex extends Component {\n    render() {\n        const {data} = this.props;\n        const posts = data.allMarkdownRemark.edges;\n\n        const heroTitle = \"Super Nintendo\";\n        const heroText =\n            \"I am about to embark on an adventure of reviewing every Super Nintendo game released in North America. Over the next 15-ish years, I will be playing each game on the original hardware, writing a review for my website, and making a video review for YouTube. Wish me luck!\";\n\n        return (\n            <Layout title=\"Super Nintendo\">\n                <Hero title={heroTitle} text={heroText}/>\n                <PostList posts={posts} type=\"snes\"/>\n            </Layout>\n        );\n    }\n}\n\nexport default SnesIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: { regex: \"/snes/\" }\n                frontmatter: { draft: { eq: false } }\n            }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 160)\n                    fields {\n                        slug\n                        readingTime {\n                            text\n                        }\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}