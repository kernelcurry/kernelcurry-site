{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./src/components/blog-preview.js","webpack:///./src/components/blog-list.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/pages/blog.js"],"names":["createHTML","this","BlogPreview","type","node","PostPreview","styled","div","frontmatter","image","childImageSharp","fixed","src","itemScope","itemType","to","fields","slug","itemProp","className","title","description","BlogList","posts","ListContainer","ul","map","key","id","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","BlogIndex","render","data","props","allMarkdownRemark","edges","heroTitle","site","siteMetadata","text","Component","pageQuery"],"mappings":"6FAEA,EAAQ,OAAR,CAA0B,SAAS,SAAUA,GAC3C,OAAO,WACL,OAAOA,EAAWC,KAAM,KAAM,GAAI,S,+FCyFvBC,EAxFK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAUxB,IAAMC,EAAcC,IAAOC,IAAV,4EAAGD,CAAH,ujBAPT,OAASF,EAAKI,YAAYC,MACnBL,EAAKI,YAAYC,MAAMC,gBAAgBC,MAAMC,IAE7C,IA+Cf,OACI,kBAACP,EAAD,CAAaQ,WAAS,EAACC,SAAS,kCAC5B,kBAAC,OAAD,CAAMC,GAAI,IAAMZ,EAAOC,EAAKY,OAAOC,KAAMC,SAAS,YAC9C,yBAAKC,UAAU,aACX,wBAAIA,UAAU,SAASf,EAAKI,YAAYY,OACxC,uBAAGF,SAAS,SAASd,EAAKI,YAAYa,iBC7B3CC,IA5BE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOpB,EAAU,EAAVA,KAChBqB,EAAgBlB,IAAOmB,GAAV,2EAAGnB,CAAH,wGAanB,OACI,kBAACkB,EAAD,KACKD,EAAMG,KAAI,YAAa,IAAXtB,EAAU,EAAVA,KACT,OAAO,kBAAC,EAAD,CAAauB,IAAKvB,EAAKwB,GAAIxB,KAAMA,EAAMD,KAAMA,U,qBCvBpE,IAAI0B,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPhC,EAAa,SAAUiC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOP,EAAQE,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQR,EAAM,UAAY,KACtFO,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAK5C,GACf6B,EAAQA,EAAQiB,EAAIjB,EAAQkB,EAAIjB,GAAM,WACpC,IAAIkB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,oJCVVO,E,gLACFC,OAAA,WAAU,IACCC,EAAQrD,KAAKsD,MAAbD,KACD/B,EAAQ+B,EAAKE,kBAAkBC,MAE/BC,EAAYJ,EAAKK,KAAKC,aAAaxC,MAAQ,cASjD,OACI,kBAAC,IAAD,CAAQA,MAAM,SACV,kBAAC,IAAD,CAAMA,MAAOsC,EAAWG,KARxB,kKASA,kBAAC,IAAD,CAAUtC,MAAOA,EAAOpB,KAAK,W,GAjBrB2D,aAuBTV,YAER,IAAMW,EAAS","file":"component---src-pages-blog-js-96eb197e7dfacdb18156.js","sourcesContent":["'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst BlogPreview = ({type, node}) => {\n\n    function get_preview_image() {\n        if (null !== node.frontmatter.image) {\n            return node.frontmatter.image.childImageSharp.fixed.src;\n        } else {\n            return '';\n        }\n    }\n\n    const PostPreview = styled.div`\n      width: 100%;\n      height: 356px;\n      margin-bottom: 20px;\n      box-shadow: 0 8px 6px -6px black;\n      \n      div.container {\n        background: rgba(255, 255, 255, 0.9);\n        width: 100%;\n        position: absolute;\n        bottom: 5%;\n        text-align: left;\n      }\n      \n      a {\n        text-decoration: none;\n        height: 100%;\n        width: 100%;\n        display: block;\n        color: rgba(0, 0, 0, 1);\n        position: relative;\n        background: rgba(0,0,0,0) url(\"${get_preview_image()}\") center center no-repeat;\n        background-size: cover;\n      }\n      \n      h2 {\n        font-size: 22px;\n        font-weight: normal;\n        line-height: 28px;\n        padding: 5px 0;\n        margin: 0 12px;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.5);\n      }\n      \n      p {\n        font-size: 16px;\n        line-height: 24px;\n        padding: 5px 0;\n        margin: 0 12px;\n        margin-bottom: 4px\n      }\n    `;\n\n    return (\n        <PostPreview itemScope itemType=\"http://schema.org/CreativeWork\">\n            <Link to={'/' + type + node.fields.slug} itemProp=\"headline\">\n                <div className=\"container\">\n                    <h2 className=\"title\">{node.frontmatter.title}</h2>\n                    <p itemProp=\"about\">{node.frontmatter.description}</p>\n                </div>\n            </Link>\n        </PostPreview>\n    );\n};\n\nBlogPreview.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n            image: PropTypes.shape({\n                childImageSharp: PropTypes.shape({\n                    fixed: PropTypes.shape({\n                        src: PropTypes.string\n                    })\n                })\n            })\n        }),\n        fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired\n        }),\n        excerpt: PropTypes.string.isRequired\n    }),\n    type: PropTypes.string.isRequired\n};\n\nexport default BlogPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport BlogPreview from \"./blog-preview\";\n\nconst BlogList = ({posts, type}) => {\n    const ListContainer = styled.ul`\n      list-style: none;\n      margin: auto;\n      margin-top: 48px;\n      margin-bottom: 128px;\n      max-width: 680px;\n      text-align: center;\n    `;\n\n    /**\n     * Render\n     */\n\n    return (\n        <ListContainer>\n            {posts.map(({node}) => {\n                return <BlogPreview key={node.id} node={node} type={type}/>;\n            })}\n        </ListContainer>\n    );\n};\n\nBlogList.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    type: PropTypes.string.isRequired\n};\n\nexport default BlogList;\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React, {Component} from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Hero from \"../components/hero\";\nimport BlogList from \"../components/blog-list\";\n\nclass BlogIndex extends Component {\n    render() {\n        const {data} = this.props;\n        const posts = data.allMarkdownRemark.edges;\n\n        const heroTitle = data.site.siteMetadata.title + \"'s Thoughts\";\n        const heroText = () => {\n            return (\n                <>\n                    Views and opinions expressed here are mine and do not reflect official policies or positions of any associated entities.\n                </>\n            );\n        };\n\n        return (\n            <Layout title=\"Blogs\">\n                <Hero title={heroTitle} text={heroText()}/>\n                <BlogList posts={posts} type=\"blog\"/>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: { regex: \"/blog/\" }\n                frontmatter: { draft: { eq: false } }\n            }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 160)\n                    fields {\n                        slug\n                        readingTime {\n                            text\n                        }\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                        image {\n                            childImageSharp {\n                                fixed(width: 800, height: 420, cropFocus: CENTER) {\n                                    src\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}