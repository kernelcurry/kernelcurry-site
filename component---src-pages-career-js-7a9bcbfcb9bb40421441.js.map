{"version":3,"sources":["webpack:///./src/components/career-preview.js","webpack:///./src/components/career-list.js","webpack:///./src/pages/career.js"],"names":["CareerPreview","type","node","PostPreview","styled","div","Meta","itemScope","itemType","className","src","frontmatter","image","childImageSharp","fluid","alt","title","aria-hidden","location","dateTime","date_start","date_stop","itemProp","description","to","fields","slug","CareerList","posts","ListContainer","ul","map","key","id","CareerIndex","render","this","props","data","allMarkdownRemark","edges","text","Component","pageQuery"],"mappings":"6KAyHeA,EApHO,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAEpBC,EAAcC,IAAOC,IAAV,kFAAGD,CAAH,kXAuCXE,EAAOF,IAAOC,IAAV,2EAAGD,CAAH,gHAiBV,OACI,kBAACD,EAAD,CAAaI,WAAS,EAACC,SAAS,kCAC5B,6BACI,yBAAKC,UAAU,OAAOC,IAAKR,EAAKS,YAAYC,MAAMC,gBAAgBC,MAAMJ,IAAKK,IAAK,SAClF,wBAAIN,UAAU,SAASP,EAAKS,YAAYK,QAE5C,6BACI,kBAACV,EAAD,KACI,0BAAMG,UAAU,mBACZ,uBAAGA,UAAU,uBAAuBQ,cAAY,SAC/Cf,EAAKS,YAAYO,UAEtB,0BAAMT,UAAU,aACZ,uBAAGA,UAAU,iBAAiBQ,cAAY,SAC1C,0BAAME,SAAS,2BACVjB,EAAKS,YAAYS,YAH1B,MAMI,0BAAMD,SAAS,2BACVjB,EAAKS,YAAYU,cAKlC,uBAAGC,SAAS,SACPpB,EAAKS,YAAYY,YAClB,kBAAC,OAAD,CAAMC,GAAI,IAAMvB,EAAOC,EAAKuB,OAAOC,KAAMJ,SAAS,YAC9C,uBAAGb,UAAU,aAAaQ,cAAY,SAD1C,4BCvDDU,EA5BI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAO3B,EAAU,EAAVA,KAClB4B,EAAgBzB,IAAO0B,GAAV,6EAAG1B,CAAH,wGAanB,OACI,kBAACyB,EAAD,KACKD,EAAMG,KAAI,YAAa,IAAX7B,EAAU,EAAVA,KACT,OAAO,kBAAC,EAAD,CAAe8B,IAAK9B,EAAK+B,GAAI/B,KAAMA,EAAMD,KAAMA,S,8CChBhEiC,E,gLACFC,OAAA,WAAU,IAEAP,EADSQ,KAAKC,MAAbC,KACYC,kBAAkBC,MAWrC,OACI,kBAAC,IAAD,CAAQxB,MAAM,UACV,kBAAC,IAAD,CAAMA,MAXI,SAWcyB,KARxB,oCACI,iEADJ,IAC8C,6BAD9C,8CASA,kBAAC,EAAD,CAAYb,MAAOA,EAAO3B,KAAK,a,GAjBrByC,aAyBbC,GAFET,YAEO","file":"component---src-pages-career-js-7a9bcbfcb9bb40421441.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst CareerPreview = ({type, node}) => {\n\n    const PostPreview = styled.div`\n      width: 100%;\n      margin-bottom: 60px;\n      text-align: left;\n      \n      div.container {\n        width: 100%;\n      }\n      \n      a {\n        text-decoration: none;\n        font-size: 87.5%;\n        margin-top: 10px;\n        float: right;\n      }\n      \n      img.logo {\n        float: right;\n        height: 22px;\n      }\n      \n      h2 {\n        font-size: 22px;\n        font-weight: normal;\n        line-height: 28px;\n        padding: 0;\n        margin: 0;\n        margin-bottom: 6px;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.5);\n      }\n      \n      p {\n        font-size: 16px;\n        line-height: 24px;\n        padding: 5px 0;\n        margin: 0;\n      }\n    `;\n\n    const Meta = styled.div`\n      font-size: 87.5%;\n      \n      span.container {\n          font-size: 87.5%;\n      }\n      \n      span.right {\n        float: right;\n      }\n\n      i {\n        margin-left: 0;\n        margin-right: 6px;\n      }\n    `;\n\n    return (\n        <PostPreview itemScope itemType=\"http://schema.org/CreativeWork\">\n            <div>\n                <img className=\"logo\" src={node.frontmatter.image.childImageSharp.fluid.src} alt={\"logo\"}/>\n                <h2 className=\"title\">{node.frontmatter.title}</h2>\n            </div>\n            <div>\n                <Meta>\n                    <span className=\"container right\">\n                        <i className=\"fa fa-location-arrow\" aria-hidden=\"true\"/>\n                        {node.frontmatter.location}\n                    </span>\n                    <span className=\"container\">\n                        <i className=\"fa fa-calendar\" aria-hidden=\"true\"/>\n                        <time dateTime=\"{node.frontmatter.date}\">\n                            {node.frontmatter.date_start}\n                        </time>\n                        &nbsp;-&nbsp;\n                        <time dateTime=\"{node.frontmatter.date}\">\n                            {node.frontmatter.date_stop}\n                        </time>\n                    </span>\n                </Meta>\n            </div>\n            <p itemProp=\"about\">\n                {node.frontmatter.description}\n                <Link to={'/' + type + node.fields.slug} itemProp=\"headline\">\n                    <i className=\"fa fa-book\" aria-hidden=\"true\"/> Detailed Information\n                </Link>\n            </p>\n        </PostPreview>\n    );\n};\n\nCareerPreview.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        frontmatter: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            location: PropTypes.string.isRequired,\n            date_start: PropTypes.string.isRequired,\n            date_stop: PropTypes.string.isRequired,\n            image: PropTypes.shape({\n                childImageSharp: PropTypes.shape({\n                    fluid: PropTypes.shape({\n                        src: PropTypes.string\n                    })\n                })\n            })\n        }),\n        fields: PropTypes.shape({\n            slug: PropTypes.string.isRequired\n        }),\n        excerpt: PropTypes.string.isRequired\n    }),\n    type: PropTypes.string.isRequired\n};\n\nexport default CareerPreview;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport CareerPreview from \"./career-preview\";\n\nconst CareerList = ({posts, type}) => {\n    const ListContainer = styled.ul`\n      list-style: none;\n      margin: auto;\n      margin-top: 48px;\n      margin-bottom: 128px;\n      max-width: 680px;\n      text-align: center;\n    `;\n\n    /**\n     * Render\n     */\n\n    return (\n        <ListContainer>\n            {posts.map(({node}) => {\n                return <CareerPreview key={node.id} node={node} type={type}/>;\n            })}\n        </ListContainer>\n    );\n};\n\nCareerList.propTypes = {\n    posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    type: PropTypes.string.isRequired\n};\n\nexport default CareerList;\n","import React, {Component} from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Hero from \"../components/hero\";\nimport CareerList from \"../components/career-list\";\n\nclass CareerIndex extends Component {\n    render() {\n        const {data} = this.props;\n        const posts = data.allMarkdownRemark.edges;\n\n        const heroTitle = \"Career\";\n        const heroText = () => {\n            return (\n                <>\n                    <b>Actively seeking new opportunities</b> <br/>San Francisco, CA - info@kernelcurry.com\n                </>\n            );\n        };\n\n        return (\n            <Layout title=\"Career\">\n                <Hero title={heroTitle} text={heroText()}/>\n                <CareerList posts={posts} type=\"career\"/>\n            </Layout>\n        );\n    }\n}\n\nexport default CareerIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: { regex: \"/career/\" }\n                frontmatter: { draft: { eq: false } }\n            }\n            sort: { fields: [frontmatter___date_start], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 160)\n                    fields {\n                        slug\n                        readingTime {\n                            text\n                        }\n                    }\n                    frontmatter {\n                        title\n                        description\n                        location\n                        date_start(formatString: \"MMM YYYY\")\n                        date_stop(formatString: \"MMM YYYY\")\n                        image {\n                            childImageSharp {\n                                fluid(maxWidth: 700) {\n                                    src\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}