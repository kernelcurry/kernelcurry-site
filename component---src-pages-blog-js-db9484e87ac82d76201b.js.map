{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["BlogIndex","render","data","this","props","posts","allMarkdownRemark","edges","heroTitle","site","siteMetadata","title","text","type","Component","pageQuery"],"mappings":"6MAOMA,E,gLACFC,OAAA,WAAU,IACCC,EAAQC,KAAKC,MAAbF,KACDG,EAAQH,EAAKI,kBAAkBC,MAE/BC,EAAYN,EAAKO,KAAKC,aAAaC,MAAQ,cASjD,OACI,kBAAC,IAAD,CAAQA,MAAM,SACV,kBAAC,IAAD,CAAMA,MAAOH,EAAWI,KARxB,kKASA,kBAAC,IAAD,CAAUP,MAAOA,EAAOQ,KAAK,W,GAjBrBC,aAuBTd,YAER,IAAMe,EAAS","file":"component---src-pages-blog-js-db9484e87ac82d76201b.js","sourcesContent":["import React, {Component} from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Hero from \"../components/hero\";\nimport PostList from \"../components/post-list\";\n\nclass BlogIndex extends Component {\n    render() {\n        const {data} = this.props;\n        const posts = data.allMarkdownRemark.edges;\n\n        const heroTitle = data.site.siteMetadata.title + \"'s Thoughts\";\n        const heroText = () => {\n            return (\n                <>\n                    Views and opinions expressed here are mine and do not reflect official policies or positions of any associated entities.\n                </>\n            );\n        };\n\n        return (\n            <Layout title=\"Blogs\">\n                <Hero title={heroTitle} text={heroText()}/>\n                <PostList posts={posts} type=\"blog\"/>\n            </Layout>\n        );\n    }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: {\n                fileAbsolutePath: { regex: \"/blog/\" }\n                frontmatter: { draft: { eq: false } }\n            }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    id\n                    excerpt(pruneLength: 160)\n                    fields {\n                        slug\n                        readingTime {\n                            text\n                        }\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                        image {\n                            childImageSharp {\n                                fixed(width: 800, height: 420, cropFocus: CENTER) {\n                                    src\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}